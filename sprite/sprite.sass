/*
  SASS variables are information about icon's compiled state, stored under its original file name

  .icon-home
    width: $icon-home-width

  The large array-like variables contain all information about a single icon
  $icon-home: x y offset_x offset_y width height total_width total_height image_path

  At the bottom of this section, we provide information about the spritesheet itself
  $spritesheet: width height image $spritesheet-sprites
  */
$arrow-punkt-name: 'arrow-punkt'
$arrow-punkt-x: 0px
$arrow-punkt-y: 54px
$arrow-punkt-offset-x: 0px
$arrow-punkt-offset-y: -54px
$arrow-punkt-width: 182px
$arrow-punkt-height: 87px
$arrow-punkt-total-width: 674px
$arrow-punkt-total-height: 141px
$arrow-punkt-image: '../img/sprite.png'
$arrow-punkt: (0px, 54px, 0px, -54px, 182px, 87px, 674px, 141px, '../img/sprite.png', 'arrow-punkt', )
$dotted-line-name: 'dotted-line'
$dotted-line-x: 0px
$dotted-line-y: 0px
$dotted-line-offset-x: 0px
$dotted-line-offset-y: 0px
$dotted-line-width: 674px
$dotted-line-height: 54px
$dotted-line-total-width: 674px
$dotted-line-total-height: 141px
$dotted-line-image: '../img/sprite.png'
$dotted-line: (0px, 0px, 0px, 0px, 674px, 54px, 674px, 141px, '../img/sprite.png', 'dotted-line', )
$figure-up-name: 'figure-up'
$figure-up-x: 182px
$figure-up-y: 54px
$figure-up-offset-x: -182px
$figure-up-offset-y: -54px
$figure-up-width: 53px
$figure-up-height: 54px
$figure-up-total-width: 674px
$figure-up-total-height: 141px
$figure-up-image: '../img/sprite.png'
$figure-up: (182px, 54px, -182px, -54px, 53px, 54px, 674px, 141px, '../img/sprite.png', 'figure-up', )
$header-mail-name: 'header_mail'
$header-mail-x: 235px
$header-mail-y: 54px
$header-mail-offset-x: -235px
$header-mail-offset-y: -54px
$header-mail-width: 17px
$header-mail-height: 19px
$header-mail-total-width: 674px
$header-mail-total-height: 141px
$header-mail-image: '../img/sprite.png'
$header-mail: (235px, 54px, -235px, -54px, 17px, 19px, 674px, 141px, '../img/sprite.png', 'header_mail', )
$spritesheet-width: 674px
$spritesheet-height: 141px
$spritesheet-image: '../img/sprite.png'
$spritesheet-sprites: ($arrow-punkt, $dotted-line, $figure-up, $header-mail, )
$spritesheet: (674px, 141px, '../img/sprite.png', $spritesheet-sprites, )

/*
  The provided mixins are intended to be used with the array-like variables

  .icon-home
    @include sprite-width($icon-home)

  .icon-email
    @include sprite($icon-email)

  Example usage in HTML:
    `display: block` sprite:
    <div class="icon-home"></div>

  To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
    // CSS
    .icon {
      display: inline-block;
    }

    // HTML
    <i class="icon icon-home"></i>
  */
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

/*
  The `sprites` mixin generates identical output to the CSS template
    but can be overridden inside of SASS

  @include sprites($spritesheet-sprites)
  */
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
